/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_sessionbuilder_free(a: number): void;
export function sessionbuilder_new(): number;
export function sessionbuilder_username(a: number, b: number, c: number): number;
export function sessionbuilder_destination(a: number, b: number, c: number): number;
export function sessionbuilder_server_domain(a: number, b: number, c: number): number;
export function sessionbuilder_password(a: number, b: number, c: number): number;
export function sessionbuilder_proxy_address(a: number, b: number, c: number): number;
export function sessionbuilder_auth_token(a: number, b: number, c: number): number;
export function sessionbuilder_pcb(a: number, b: number, c: number): number;
export function sessionbuilder_kdc_proxy_url(a: number, b: number, c: number): number;
export function sessionbuilder_desktop_size(a: number, b: number): number;
export function sessionbuilder_render_canvas(a: number, b: number): number;
export function sessionbuilder_set_cursor_style_callback(a: number, b: number): number;
export function sessionbuilder_set_cursor_style_callback_context(a: number, b: number): number;
export function sessionbuilder_remote_clipboard_changed_callback(a: number, b: number): number;
export function sessionbuilder_remote_received_format_list_callback(a: number, b: number): number;
export function sessionbuilder_force_clipboard_update_callback(a: number, b: number): number;
export function sessionbuilder_connect(a: number): number;
export function sessionterminationinfo_reason(a: number, b: number): void;
export function __wbg_session_free(a: number): void;
export function session_run(a: number): number;
export function session_desktop_size(a: number): number;
export function session_apply_inputs(a: number, b: number, c: number): void;
export function session_release_all_inputs(a: number, b: number): void;
export function session_synchronize_lock_keys(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function session_shutdown(a: number, b: number): void;
export function session_on_clipboard_paste(a: number, b: number): number;
export function session_supports_unicode_keyboard_shortcuts(a: number): number;
export function __wbg_sessionterminationinfo_free(a: number): void;
export function ironrdp_init(a: number, b: number): void;
export function __wbg_desktopsize_free(a: number): void;
export function __wbg_get_desktopsize_width(a: number): number;
export function __wbg_set_desktopsize_width(a: number, b: number): void;
export function __wbg_get_desktopsize_height(a: number): number;
export function __wbg_set_desktopsize_height(a: number, b: number): void;
export function desktopsize_new(a: number, b: number): number;
export function clipboardtransaction_new(): number;
export function clipboardtransaction_add_content(a: number, b: number): void;
export function clipboardtransaction_is_empty(a: number): number;
export function clipboardtransaction_content(a: number): number;
export function clipboardcontent_new_binary(a: number, b: number, c: number, d: number): number;
export function clipboardcontent_mime_type(a: number, b: number): void;
export function clipboardcontent_value(a: number): number;
export function clipboardcontent_new_text(a: number, b: number, c: number, d: number): number;
export function __wbg_clipboardtransaction_free(a: number): void;
export function __wbg_clipboardcontent_free(a: number): void;
export function __wbg_ironrdperror_free(a: number): void;
export function ironrdperror_backtrace(a: number, b: number): void;
export function ironrdperror_kind(a: number): number;
export function __wbg_deviceevent_free(a: number): void;
export function deviceevent_new_mouse_button_pressed(a: number): number;
export function deviceevent_new_mouse_button_released(a: number): number;
export function deviceevent_new_mouse_move(a: number, b: number): number;
export function deviceevent_new_wheel_rotations(a: number, b: number): number;
export function deviceevent_new_key_pressed(a: number): number;
export function deviceevent_new_key_released(a: number): number;
export function deviceevent_new_unicode_pressed(a: number): number;
export function deviceevent_new_unicode_released(a: number): number;
export function __wbg_inputtransaction_free(a: number): void;
export function inputtransaction_new(): number;
export function inputtransaction_add_event(a: number, b: number): void;
export function ring_core_0_17_7_bn_mul_mont(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function wasm_bindgen__convert__closures__invoke0_mut__h472a2eec1eb63f16(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h52ac3e07abf19181(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h567eb7933fc125a1(a: number, b: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h8cf2451f34e79e5d(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h794127c7cda2640f(a: number, b: number, c: number, d: number): void;
